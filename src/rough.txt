import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import java.time.LocalDateTime;
import java.util.List;

@Service
public class AuditService {

    private final AuditRepository auditRepository;

    @Autowired
    public AuditService(AuditRepository auditRepository) {
        this.auditRepository = auditRepository;
    }

    public List<AggregateResult> getAggregateDataByMonth(LocalDateTime startDate, LocalDateTime endDate) {
        // Create the aggregation pipeline
        Aggregation aggregation = Aggregation.newAggregation(
            Aggregation.match(Criteria.where("auditDate").gte(startDate).lte(endDate)),
            Aggregation.group("teamName", "templateName", "centreName", "racfId", "printPeriod")
                .count().as("volume"),
            Aggregation.project("teamName", "templateName", "centreName", "racfId", "printPeriod", "volume")
        );

        // Execute the aggregation query
        AggregationResults<AggregateResult> results = auditRepository.aggregate(aggregation, "auditlogs", AggregateResult.class);
        return results.getMappedResults();
    }
}
public class AggregateResult {
    private String teamName;
    private String templateName;
    private String centreName;
    private String racfId;
    private String printPeriod;
    private int volume;

    // Add getters and setters
}
